//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using YumaPos.Server.Infrastructure.Repositories;
using YumaPos.Server.Infrastructure.DataObjects;
using YumaPos.Server.Data.Sql;



namespace TestRepositoryGeneration
{
public partial class TaxRepository : RepositoryBase, ITaxRepository
{
private TaxCacheRepository _taxCacheRepository;
private TaxVersionRepository _taxVersionRepository;


public TaxRepository(YumaPos.FrontEnd.Infrastructure.Configuration.IDataAccessService dataAccessService) : base(dataAccessService)
{
_taxCacheRepository = new TaxCacheRepository(dataAccessService);
_taxVersionRepository = new TaxVersionRepository(dataAccessService);
}

/*
public IEnumerable<YumaPos.FrontEnd.Infrastructure.DataObjects.PosFdat.Taxes.Tax> GetAll(Boolean? isDeleted = false)
{
return _taxCacheRepository.GetAll(isDeleted);
}
public async Task<IEnumerable<YumaPos.FrontEnd.Infrastructure.DataObjects.PosFdat.Taxes.Tax>> GetAllAsync(Boolean? isDeleted = false)
{
return await _taxCacheRepository.GetAllAsync(isDeleted);
}

*/
public YumaPos.FrontEnd.Infrastructure.DataObjects.PosFdat.Taxes.Tax GetByTaxId(Guid  taxId, Boolean? isDeleted = false)
{
return _taxCacheRepository.GetByTaxId(taxId, isDeleted);
}
public async Task<YumaPos.FrontEnd.Infrastructure.DataObjects.PosFdat.Taxes.Tax> GetByTaxIdAsync(Guid  taxId, Boolean? isDeleted = false)
{
return await _taxCacheRepository.GetByTaxIdAsync(taxId, isDeleted);
}

public void Insert(YumaPos.FrontEnd.Infrastructure.DataObjects.PosFdat.Taxes.Tax tax)
{
tax.Modified = DateTimeOffset.Now;
tax.TaxVersionId = _taxVersionRepository.Insert(tax);
_taxCacheRepository.Insert(tax);
}
public async Task InsertAsync(YumaPos.FrontEnd.Infrastructure.DataObjects.PosFdat.Taxes.Tax tax)
{
tax.Modified = DateTimeOffset.Now;
tax.TaxVersionId = await _taxVersionRepository.InsertAsync(tax);
await _taxCacheRepository.InsertAsync(tax);
}

public void UpdateByTaxId(YumaPos.FrontEnd.Infrastructure.DataObjects.PosFdat.Taxes.Tax tax)
{
tax.Modified = DateTimeOffset.Now;
tax.TaxVersionId = _taxVersionRepository.Insert(tax);
_taxCacheRepository.UpdateByTaxId(tax);
}
public async Task UpdateByTaxIdAsync(YumaPos.FrontEnd.Infrastructure.DataObjects.PosFdat.Taxes.Tax tax)
{
tax.Modified = DateTimeOffset.Now;
tax.TaxVersionId = await _taxVersionRepository.InsertAsync(tax);
await _taxCacheRepository.UpdateByTaxIdAsync(tax);
}

public void RemoveByTaxId(YumaPos.FrontEnd.Infrastructure.DataObjects.PosFdat.Taxes.Tax tax)
{
tax.IsDeleted = true;
_taxCacheRepository.UpdateByTaxId(tax);
}
public async Task RemoveByTaxIdAsync(YumaPos.FrontEnd.Infrastructure.DataObjects.PosFdat.Taxes.Tax tax)
{
tax.IsDeleted = true;
await _taxCacheRepository.UpdateByTaxIdAsync(tax);
}
public void RemoveByTaxId(Guid  taxId)
{
var result = _taxCacheRepository.GetByTaxId(taxId);
result.IsDeleted = true;
UpdateByTaxId(result);
}
public async Task RemoveByTaxIdAsync(Guid  taxId)
{
var result = await _taxCacheRepository.GetByTaxIdAsync(taxId);
result.IsDeleted = true;
await UpdateByTaxIdAsync(result);
}


}
}
