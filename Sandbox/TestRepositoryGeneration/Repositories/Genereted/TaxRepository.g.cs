//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using YumaPos.Server.Infrastructure.Repositories
using YumaPos.Server.Data.Sql;



namespace YumaPos.Server.Data.Sql.Taxes
{
public partial class TaxRepository : RepositoryBase,ITaxRepository
{
private TaxСacheRepository _taxСacheRepository;
private TaxVersionRepository _taxVersionRepository;


public TaxRepository(YumaPos.FrontEnd.Infrastructure.Configuration.IDataAccessService dataAccessService) : base(dataAccessService)
{
_taxСacheRepository = new TaxСacheRepository(dataAccessService);
_taxVersionRepository = new TaxVersionRepository(dataAccessService);
}

/*
public IEnumerable<YumaPos.FrontEnd.Infrastructure.DataObjects.PosFdat.Taxes.Tax> GetAll(Boolean? isDeleted = false)
{
return _taxСacheRepository.GetAll(Boolean? isDeleted = false);
}
public async Task<IEnumerable<YumaPos.FrontEnd.Infrastructure.DataObjects.PosFdat.Taxes.Tax>> GetAllAsync(Boolean? isDeleted = false)
{
return await _taxСacheRepository.GetAllAsync(Boolean? isDeleted = false);
}

*/
/*
public void Insert(YumaPos.FrontEnd.Infrastructure.DataObjects.PosFdat.Taxes.Tax tax)
{
tax.Modified = DateTimeOffset.Now;
tax. = _taxVersionRepository.Insert(tax);
_taxСacheRepository.Insert(tax);
}
public async Task InsertAsync(YumaPos.FrontEnd.Infrastructure.DataObjects.PosFdat.Taxes.Tax tax)
{
tax.Modified = DateTimeOffset.Now;
tax. = _taxVersionRepository.InsertAsync(tax);
await _taxСacheRepository.InsertAsync(tax);
}

*/

}
}
