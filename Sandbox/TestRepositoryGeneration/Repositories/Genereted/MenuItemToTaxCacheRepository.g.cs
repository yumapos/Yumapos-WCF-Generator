//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using YumaPos.Server.Data.Sql;



namespace TestRepositoryGeneration
{
public partial class MenuItemToTaxCacheRepository : RepositoryBase
{
private const string SelectQuery = "SELECT [ItemId],[ItemVersionId],[Modified],[ModifiedBy],[TaxId],[TaxVersionId],[IsDeleted] FROM [MenuItemToTaxs]";
private const string InsertQuery = "INSERT INTO MenuItemToTaxs([ItemId],[ItemVersionId],[Modified],[ModifiedBy],[TaxId],[TaxVersionId],[IsDeleted]) VALUES(@ItemId,@ItemVersionId,@Modified,@ModifiedBy,@TaxId,@TaxVersionId,@IsDeleted)";
private const string WhereQueryByItemId = "WHERE MenuItemToTaxs.[ItemId] = @ItemId";
private const string UpdateQueryByItemId = "UPDATE [MenuItemToTaxs] SET MenuItemToTaxs.[ItemId] = @ItemId";
private const string DeleteQueryByItemId = "DELETE FROM[MenuItemToTaxs] WHERE MenuItemToTaxs.[ItemId] = @ItemId";
private const string WhereQueryByTaxId = "WHERE MenuItemToTaxs.[TaxId] = @TaxId";
private const string UpdateQueryByTaxId = "UPDATE [MenuItemToTaxs] SET MenuItemToTaxs.[TaxId] = @TaxId";
private const string DeleteQueryByTaxId = "DELETE FROM[MenuItemToTaxs] WHERE MenuItemToTaxs.[TaxId] = @TaxId";
private const string AndWithFilterData = "WHERE MenuItemToTaxs.[IsDeleted] = @IsDeleted";


public MenuItemToTaxCacheRepository(YumaPos.FrontEnd.Infrastructure.Configuration.IDataAccessService dataAccessService) : base(dataAccessService) { }
/*
public IEnumerable<YumaPos.Server.Infrastructure.DataObjects.MenuItemToTax> GetAll(Boolean? isDeleted = false)
{
object parameters = new {isDeleted};
var sql = SelectQuery;
if (isDeleted.HasValue)
{
sql = sql + AndWithFilterData;
}
var result = DataAccessService.Get<YumaPos.Server.Infrastructure.DataObjects.MenuItemToTax>(sql, parameters).ToList();
return result.ToList();
}
public async Task<IEnumerable<YumaPos.Server.Infrastructure.DataObjects.MenuItemToTax>> GetAllAsync(Boolean? isDeleted = false)
{
object parameters = new {isDeleted};
var sql = SelectQuery;
if (isDeleted.HasValue)
{
sql = sql + AndWithFilterData;
}
var result = (await DataAccessService.GetAsync<YumaPos.Server.Infrastructure.DataObjects.MenuItemToTax>(sql, parameters));
return result.ToList();
}

*/
/*
public IEnumerable<YumaPos.Server.Infrastructure.DataObjects.MenuItemToTax> GetByTaxId(Guid  taxId, Boolean? isDeleted = false)
{
object parameters = new {taxId,isDeleted};
var sql = SelectQuery + WhereQueryByTaxId;
if (isDeleted.HasValue)
{
sql = sql + AndWithFilterData;
}
var result = DataAccessService.Get<YumaPos.Server.Infrastructure.DataObjects.MenuItemToTax>(sql, new {taxId});
return result.ToList();
}
public async Task<IEnumerable<YumaPos.Server.Infrastructure.DataObjects.MenuItemToTax>> GetByTaxIdAsync(Guid  taxId, Boolean? isDeleted = false)
{
object parameters = new {taxId,isDeleted};
var sql = SelectQuery + WhereQueryByTaxId;
if (isDeleted.HasValue)
{
sql = sql + AndWithFilterData;
}
var result = (await DataAccessService.GetAsync<YumaPos.Server.Infrastructure.DataObjects.MenuItemToTax>(sql, new {taxId}));
return result.ToList();
}


*/
/*
public void Insert(YumaPos.Server.Infrastructure.DataObjects.MenuItemToTax menuItemToTax)
{
DataAccessService.InsertObject(menuItemToTax,InsertQuery);
}
public async Task InsertAsync(YumaPos.Server.Infrastructure.DataObjects.MenuItemToTax menuItemToTax)
{
await DataAccessService.InsertObjectAsync(menuItemToTax,InsertQuery);
}

*/
/*
public void UpdateByTaxId(YumaPos.Server.Infrastructure.DataObjects.MenuItemToTax menuItemToTax)
{
var sql = UpdateQueryByTaxId + WhereQueryByTaxId; 
DataAccessService.PersistObject(menuItemToTax, sql);
}
public async Task UpdateByTaxIdAsync(YumaPos.Server.Infrastructure.DataObjects.MenuItemToTax menuItemToTax)
{
var sql = UpdateQueryByTaxId + WhereQueryByTaxId; 
await DataAccessService.PersistObjectAsync(menuItemToTax, sql);
}


*/
/*
public void RemoveByTaxId(YumaPos.Server.Infrastructure.DataObjects.MenuItemToTax menuItemToTax)
{
var sql = DeleteQueryByTaxId + WhereQueryByTaxId; 
DataAccessService.PersistObject(menuItemToTax, sql);
}
public async Task RemoveByTaxIdAsync(YumaPos.Server.Infrastructure.DataObjects.MenuItemToTax menuItemToTax)
{
var sql = DeleteQueryByTaxId + WhereQueryByTaxId; 
await DataAccessService.PersistObjectAsync(menuItemToTax, sql);
}

public void RemoveByTaxId(Guid  taxId)
{
var sql = DeleteQueryByTaxId + WhereQueryByTaxId; 
DataAccessService.PersistObject<YumaPos.Server.Infrastructure.DataObjects.MenuItemToTax>(sql, new {taxId});
}
public async Task RemoveByTaxIdAsync(Guid  taxId)
{
var sql = DeleteQueryByTaxId + WhereQueryByTaxId; 
await DataAccessService.PersistObjectAsync<YumaPos.Server.Infrastructure.DataObjects.MenuItemToTax>(sql, new {taxId});
}


*/

}
}
