//------------------------------------------------------------------------------
// <auto-generated>
//	 This code was generated from a template.
//
//	 Manual changes to this file may cause unexpected behavior in your application.
//	 Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using YumaPos.Server.Infrastructure.Repositories;
using YumaPos.Server.Infrastructure.DataObjects;
using YumaPos.FrontEnd.Infrastructure.Common.DataAccess;
using YumaPos.FrontEnd.Infrastructure.Configuration;
using YumaPos.Server.Data.Sql.Menu;


namespace YumaPos.Server.Data.Sql
{
	public partial class TaxRepository : ITaxRepository
	{
		private IDataAccessController _dataAccessController;
		private TaxCacheRepository _taxCacheRepository;
		private TaxVersionRepository _taxVersionRepository;
		private MenuItems2TaxesCacheRepository _menuItems2TaxesCacheRepository;
		private MenuItems2TaxesVersionRepository _menuItems2TaxesVersionRepository;
		private MenuItemCacheRepository _menuItemCacheRepository;


		public TaxRepository(IDataAccessController dataAccessController,
		IDataAccessService dataAccessService)
		{
			_dataAccessController = dataAccessController;
			_taxCacheRepository = new TaxCacheRepository(dataAccessService);
			_taxVersionRepository = new TaxVersionRepository(dataAccessService);
			_menuItems2TaxesCacheRepository = new MenuItems2TaxesCacheRepository(dataAccessService);
			_menuItems2TaxesVersionRepository = new MenuItems2TaxesVersionRepository(dataAccessService);
			_menuItemCacheRepository = new MenuItemCacheRepository(dataAccessService);
		}

		/*
		public IEnumerable<YumaPos.FrontEnd.Infrastructure.DataObjects.PosFdat.Taxes.Tax> GetAll(bool? isDeleted = false)
		{
		return _taxCacheRepository.GetAll(isDeleted);
		}
		public async Task<IEnumerable<YumaPos.FrontEnd.Infrastructure.DataObjects.PosFdat.Taxes.Tax>> GetAllAsync(bool? isDeleted = false)
		{
		return await _taxCacheRepository.GetAllAsync(isDeleted);
		}

		*/
		public YumaPos.FrontEnd.Infrastructure.DataObjects.PosFdat.Taxes.Tax GetByTaxId(int taxId, DateTimeOffset modified, bool? isDeleted = false)
		{
			var result = _taxVersionRepository.GetByTaxId(taxId, modified, isDeleted);
			return result;
		}

		public async Task<YumaPos.FrontEnd.Infrastructure.DataObjects.PosFdat.Taxes.Tax> GetByTaxIdAsync(int taxId, DateTimeOffset modified, bool? isDeleted = false)
		{
			var result = await _taxVersionRepository.GetByTaxIdAsync(taxId, modified, isDeleted);
			return result;
		}

		public YumaPos.FrontEnd.Infrastructure.DataObjects.PosFdat.Taxes.Tax GetByTaxId(int taxId, bool? isDeleted = false)
		{
			var result = _taxCacheRepository.GetByTaxId(taxId, isDeleted);
			return result;
		}

		public async Task<YumaPos.FrontEnd.Infrastructure.DataObjects.PosFdat.Taxes.Tax> GetByTaxIdAsync(int taxId, bool? isDeleted = false)
		{
			var result = await _taxCacheRepository.GetByTaxIdAsync(taxId, isDeleted);
			return result;
		}


		/*
		public IEnumerable<YumaPos.FrontEnd.Infrastructure.DataObjects.PosFdat.Taxes.Tax> GetByTaxVersionId(System.Guid taxVersionId, bool? isDeleted = false)
		{
		var result = _taxVersionRepository.GetByTaxVersionId(taxVersionId, isDeleted);
		return result.ToList();
		}

		public async Task<IEnumerable<YumaPos.FrontEnd.Infrastructure.DataObjects.PosFdat.Taxes.Tax>> GetByTaxVersionIdAsync(System.Guid taxVersionId, bool? isDeleted = false)
		{
		var result = await _taxVersionRepository.GetByTaxVersionIdAsync(taxVersionId, isDeleted);
		return result.ToList();
		}


		*/
		public int Insert(YumaPos.FrontEnd.Infrastructure.DataObjects.PosFdat.Taxes.Tax tax)
		{
			tax.Modified = DateTimeOffset.Now;
			tax.ModifiedBy = _dataAccessController.EmployeeId.Value;
			tax.TaxVersionId = Guid.NewGuid();
			tax.TaxId = 0;
			_taxVersionRepository.Insert(tax);
			var res = _taxCacheRepository.Insert(tax);
			UpdateMenuItems2Taxes(tax);
			return (int)res;
		}
		public async Task<int> InsertAsync(YumaPos.FrontEnd.Infrastructure.DataObjects.PosFdat.Taxes.Tax tax)
		{
			tax.Modified = DateTimeOffset.Now;
			tax.ModifiedBy = _dataAccessController.EmployeeId.Value;
			tax.TaxVersionId = Guid.NewGuid();
			tax.TaxId = 0;
			await _taxVersionRepository.InsertAsync(tax);
			var res = await _taxCacheRepository.InsertAsync(tax);
			UpdateMenuItems2Taxes(tax);
			return (int)res;
		}

		public void UpdateByTaxId(YumaPos.FrontEnd.Infrastructure.DataObjects.PosFdat.Taxes.Tax tax)
		{
			tax.Modified = DateTimeOffset.Now;
			tax.ModifiedBy = _dataAccessController.EmployeeId.Value;
			tax.TaxVersionId = Guid.NewGuid();
			_taxVersionRepository.Insert(tax);
			_taxCacheRepository.UpdateByTaxId(tax);
			UpdateMenuItems2Taxes(tax);
		}
		public async Task UpdateByTaxIdAsync(YumaPos.FrontEnd.Infrastructure.DataObjects.PosFdat.Taxes.Tax tax)
		{
			tax.Modified = DateTimeOffset.Now;
			tax.ModifiedBy = _dataAccessController.EmployeeId.Value;
			tax.TaxVersionId = Guid.NewGuid();
			await _taxVersionRepository.InsertAsync(tax);
			await _taxCacheRepository.UpdateByTaxIdAsync(tax);
			UpdateMenuItems2Taxes(tax);
		}

		private void UpdateMenuItems2Taxes(YumaPos.FrontEnd.Infrastructure.DataObjects.PosFdat.Taxes.Tax tax)
		{
			if (tax.MenuItemIds == null)
				tax.MenuItemIds = _menuItems2TaxesCacheRepository.GetByTaxId(tax.TaxId).Select(i => i.MenuItemId);
			var listOfMenuItems2Taxes = tax.MenuItemIds.Select(ids => new MenuItems2Taxes()
			{
				MenuItemId = ids,
				MenuItemVersionId = _menuItemCacheRepository.GetByMenuItemId(ids).MenuItemVersionId,
				TaxId = tax.TaxId,
				TaxVersionId = tax.TaxVersionId,
			}).ToList();
			_menuItems2TaxesCacheRepository.RemoveByTaxId(tax.TaxId);
			foreach (var mt in listOfMenuItems2Taxes)
			{
				mt.Modified = DateTimeOffset.Now;
				mt.ModifiedBy = tax.ModifiedBy;
				_menuItems2TaxesCacheRepository.Insert(mt);
				_menuItems2TaxesVersionRepository.Insert(mt);
			}
		}

		public void RemoveByTaxId(YumaPos.FrontEnd.Infrastructure.DataObjects.PosFdat.Taxes.Tax tax)
		{
			tax.IsDeleted = true;
			UpdateByTaxId(tax);
		}
		public async Task RemoveByTaxIdAsync(YumaPos.FrontEnd.Infrastructure.DataObjects.PosFdat.Taxes.Tax tax)
		{
			tax.IsDeleted = true;
			await UpdateByTaxIdAsync(tax);
		}
		public void RemoveByTaxId(int taxId)
		{
			var result = _taxCacheRepository.GetByTaxId(taxId);
			result.IsDeleted = true;
			UpdateByTaxId(result);
		}
		public async Task RemoveByTaxIdAsync(int taxId)
		{
			var result = await _taxCacheRepository.GetByTaxIdAsync(taxId);
			result.IsDeleted = true;
			await UpdateByTaxIdAsync(result);
		}


	}
}
