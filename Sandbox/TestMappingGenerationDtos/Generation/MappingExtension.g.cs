//------------------------------------------------------------------------------
// <auto-generated>
//	 This code was generated from a template.
//
//	 Manual changes to this file may cause unexpected behavior in your application.
//	 Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Linq;
using TestMappingGeneration.Enums;

namespace blah
{
	public static class MapExtensions
	{
		//TestMappingGeneration.DataObjects.BaseAddress
		//TestMappingGeneration.DataObjects.ClassWithoutPair
		//TestMappingGenerationDtos.AnotherClassWithoutPair

		public static TestMappingGenerationDtos.AddressDto MapToDto(this TestMappingGeneration.DataObjects.Address item)
		{
			//itemDo.PropertyFromBaseAddress

			if (item == null) return null;

			var itemDto = new TestMappingGenerationDtos.AddressDto();
			itemDto.Id = item.Id;
			itemDto.Country = (CountryISOCodes2)item.Country;
			itemDto.City = item.City;
			itemDto.State = item.State;
			itemDto.Street = item.Street;
			itemDto.Building = item.Building;
			itemDto.ZipCode = item.ZipCode;
			itemDto.Latitude = item.Latitude;
			itemDto.Longitude = item.Longitude;

			return itemDto;
		}

		public static TestMappingGeneration.DataObjects.Address MapFromDto(this TestMappingGenerationDtos.AddressDto itemDto)
		{

			if (itemDto == null) return null;

			var item = new TestMappingGeneration.DataObjects.Address();
			item.Id = itemDto.Id;
			item.Country = (Int32)itemDto.Country;
			item.City = itemDto.City;
			item.State = itemDto.State;
			item.Street = itemDto.Street;
			item.Building = itemDto.Building;
			item.ZipCode = itemDto.ZipCode;
			item.Latitude = itemDto.Latitude;
			item.Longitude = itemDto.Longitude;

			return item;
		}

		public static TestMappingGenerationDtos.DeliveryZone2StoreDto MapToDeliveryZone2StoreDto(this TestMappingGeneration.DataObjects.DeliveryZone2Store item)
		{
			//itemDo.DeliveryZone2StoreVersionId
			//itemDo.Modified
			//itemDo.ModifiedBy
			//itemDo.IsDeleted

			if (item == null) return null;

			var itemDto = new TestMappingGenerationDtos.DeliveryZone2StoreDto();
			itemDto.DeliveryZone2StoreId = item.DeliveryZone2StoreId;
			itemDto.DeliveryZoneId = item.DeliveryZoneId;
			itemDto.StoreId = item.StoreId;
			itemDto.Name = item.Name;
			itemDto.MinimumSumForFreeDelivery = item.MinimumSumForFreeDelivery;
			itemDto.DeliveryPrice = item.DeliveryPrice;
			itemDto.MinimumSumForDelivery = item.MinimumSumForDelivery;
			itemDto.SecondsTimeCookingLimit = item.SecondsTimeCookingLimit;
			itemDto.SecondsTimeDeliveryLimit = item.SecondsTimeDeliveryLimit;
			itemDto.PriceFixed = item.PriceFixed;
			itemDto.PricePercentOfOrder = item.PricePercentOfOrder;
			itemDto.PricePercentOfCostDelivery = item.PricePercentOfCostDelivery;

			return itemDto;
		}

		public static TestMappingGeneration.DataObjects.DeliveryZone2Store MapToDeliveryZone2Store(this TestMappingGenerationDtos.DeliveryZone2StoreDto itemDto)
		{

			if (itemDto == null) return null;

			var item = new TestMappingGeneration.DataObjects.DeliveryZone2Store();
			item.DeliveryZone2StoreId = itemDto.DeliveryZone2StoreId;
			item.DeliveryZoneId = itemDto.DeliveryZoneId;
			item.StoreId = itemDto.StoreId;
			item.Name = itemDto.Name;
			item.MinimumSumForFreeDelivery = itemDto.MinimumSumForFreeDelivery;
			item.DeliveryPrice = itemDto.DeliveryPrice;
			item.MinimumSumForDelivery = itemDto.MinimumSumForDelivery;
			item.SecondsTimeCookingLimit = itemDto.SecondsTimeCookingLimit;
			item.SecondsTimeDeliveryLimit = itemDto.SecondsTimeDeliveryLimit;
			item.PriceFixed = itemDto.PriceFixed;
			item.PricePercentOfOrder = itemDto.PricePercentOfOrder;
			item.PricePercentOfCostDelivery = itemDto.PricePercentOfCostDelivery;

			return item;
		}

		public static TestMappingGenerationDtos.DeliveryZone2StoreDtoDup MapToDeliveryZone2StoreDtoDup(this TestMappingGeneration.DataObjects.DeliveryZone2Store item)
		{
			//itemDo.DeliveryZone2StoreVersionId
			//itemDo.Modified
			//itemDo.ModifiedBy
			//itemDo.IsDeleted

			if (item == null) return null;

			var itemDto = new TestMappingGenerationDtos.DeliveryZone2StoreDtoDup();
			itemDto.DeliveryZone2StoreId = item.DeliveryZone2StoreId;
			itemDto.DeliveryZoneId = item.DeliveryZoneId;
			itemDto.StoreId = item.StoreId;
			itemDto.Name = item.Name;
			itemDto.MinimumSumForFreeDelivery = item.MinimumSumForFreeDelivery;
			itemDto.DeliveryPrice = item.DeliveryPrice;
			itemDto.MinimumSumForDelivery = item.MinimumSumForDelivery;
			itemDto.SecondsTimeCookingLimit = item.SecondsTimeCookingLimit;
			itemDto.SecondsTimeDeliveryLimit = item.SecondsTimeDeliveryLimit;
			itemDto.PriceFixed = item.PriceFixed;
			itemDto.PricePercentOfOrder = item.PricePercentOfOrder;
			itemDto.PricePercentOfCostDelivery = item.PricePercentOfCostDelivery;

			return itemDto;
		}

		public static TestMappingGeneration.DataObjects.DeliveryZone2Store MapToDeliveryZone2Store(this TestMappingGenerationDtos.DeliveryZone2StoreDtoDup itemDto)
		{

			if (itemDto == null) return null;

			var item = new TestMappingGeneration.DataObjects.DeliveryZone2Store();
			item.DeliveryZone2StoreId = itemDto.DeliveryZone2StoreId;
			item.DeliveryZoneId = itemDto.DeliveryZoneId;
			item.StoreId = itemDto.StoreId;
			item.Name = itemDto.Name;
			item.MinimumSumForFreeDelivery = itemDto.MinimumSumForFreeDelivery;
			item.DeliveryPrice = itemDto.DeliveryPrice;
			item.MinimumSumForDelivery = itemDto.MinimumSumForDelivery;
			item.SecondsTimeCookingLimit = itemDto.SecondsTimeCookingLimit;
			item.SecondsTimeDeliveryLimit = itemDto.SecondsTimeDeliveryLimit;
			item.PriceFixed = itemDto.PriceFixed;
			item.PricePercentOfOrder = itemDto.PricePercentOfOrder;
			item.PricePercentOfCostDelivery = itemDto.PricePercentOfCostDelivery;

			return item;
		}

		public static TestMappingGenerationDtos.DeliveryZone2StoreDto MapToDeliveryZone2StoreDto(this TestMappingGeneration.DataObjects.DeliveryZone2StoreDup item)
		{
			//itemDo.DeliveryZone2StoreVersionId
			//itemDo.Modified
			//itemDo.ModifiedBy
			//itemDo.IsDeleted

			if (item == null) return null;

			var itemDto = new TestMappingGenerationDtos.DeliveryZone2StoreDto();
			itemDto.DeliveryZone2StoreId = item.DeliveryZone2StoreId;
			itemDto.DeliveryZoneId = item.DeliveryZoneId;
			itemDto.StoreId = item.StoreId;
			itemDto.Name = item.Name;
			itemDto.MinimumSumForFreeDelivery = item.MinimumSumForFreeDelivery;
			itemDto.DeliveryPrice = item.DeliveryPrice;
			itemDto.MinimumSumForDelivery = item.MinimumSumForDelivery;
			itemDto.SecondsTimeCookingLimit = item.SecondsTimeCookingLimit;
			itemDto.SecondsTimeDeliveryLimit = item.SecondsTimeDeliveryLimit;
			itemDto.PriceFixed = item.PriceFixed;
			itemDto.PricePercentOfOrder = item.PricePercentOfOrder;
			itemDto.PricePercentOfCostDelivery = item.PricePercentOfCostDelivery;

			return itemDto;
		}

		public static TestMappingGeneration.DataObjects.DeliveryZone2StoreDup MapToDeliveryZone2StoreDup(this TestMappingGenerationDtos.DeliveryZone2StoreDto itemDto)
		{

			if (itemDto == null) return null;

			var item = new TestMappingGeneration.DataObjects.DeliveryZone2StoreDup();
			item.DeliveryZone2StoreId = itemDto.DeliveryZone2StoreId;
			item.DeliveryZoneId = itemDto.DeliveryZoneId;
			item.StoreId = itemDto.StoreId;
			item.Name = itemDto.Name;
			item.MinimumSumForFreeDelivery = itemDto.MinimumSumForFreeDelivery;
			item.DeliveryPrice = itemDto.DeliveryPrice;
			item.MinimumSumForDelivery = itemDto.MinimumSumForDelivery;
			item.SecondsTimeCookingLimit = itemDto.SecondsTimeCookingLimit;
			item.SecondsTimeDeliveryLimit = itemDto.SecondsTimeDeliveryLimit;
			item.PriceFixed = itemDto.PriceFixed;
			item.PricePercentOfOrder = itemDto.PricePercentOfOrder;
			item.PricePercentOfCostDelivery = itemDto.PricePercentOfCostDelivery;

			return item;
		}

		public static TestMappingGenerationDtos.DeliveryZone2StoreDtoDup MapToDeliveryZone2StoreDtoDup(this TestMappingGeneration.DataObjects.DeliveryZone2StoreDup item)
		{
			//itemDo.DeliveryZone2StoreVersionId
			//itemDo.Modified
			//itemDo.ModifiedBy
			//itemDo.IsDeleted

			if (item == null) return null;

			var itemDto = new TestMappingGenerationDtos.DeliveryZone2StoreDtoDup();
			itemDto.DeliveryZone2StoreId = item.DeliveryZone2StoreId;
			itemDto.DeliveryZoneId = item.DeliveryZoneId;
			itemDto.StoreId = item.StoreId;
			itemDto.Name = item.Name;
			itemDto.MinimumSumForFreeDelivery = item.MinimumSumForFreeDelivery;
			itemDto.DeliveryPrice = item.DeliveryPrice;
			itemDto.MinimumSumForDelivery = item.MinimumSumForDelivery;
			itemDto.SecondsTimeCookingLimit = item.SecondsTimeCookingLimit;
			itemDto.SecondsTimeDeliveryLimit = item.SecondsTimeDeliveryLimit;
			itemDto.PriceFixed = item.PriceFixed;
			itemDto.PricePercentOfOrder = item.PricePercentOfOrder;
			itemDto.PricePercentOfCostDelivery = item.PricePercentOfCostDelivery;

			return itemDto;
		}

		public static TestMappingGeneration.DataObjects.DeliveryZone2StoreDup MapToDeliveryZone2StoreDup(this TestMappingGenerationDtos.DeliveryZone2StoreDtoDup itemDto)
		{

			if (itemDto == null) return null;

			var item = new TestMappingGeneration.DataObjects.DeliveryZone2StoreDup();
			item.DeliveryZone2StoreId = itemDto.DeliveryZone2StoreId;
			item.DeliveryZoneId = itemDto.DeliveryZoneId;
			item.StoreId = itemDto.StoreId;
			item.Name = itemDto.Name;
			item.MinimumSumForFreeDelivery = itemDto.MinimumSumForFreeDelivery;
			item.DeliveryPrice = itemDto.DeliveryPrice;
			item.MinimumSumForDelivery = itemDto.MinimumSumForDelivery;
			item.SecondsTimeCookingLimit = itemDto.SecondsTimeCookingLimit;
			item.SecondsTimeDeliveryLimit = itemDto.SecondsTimeDeliveryLimit;
			item.PriceFixed = itemDto.PriceFixed;
			item.PricePercentOfOrder = itemDto.PricePercentOfOrder;
			item.PricePercentOfCostDelivery = itemDto.PricePercentOfCostDelivery;

			return item;
		}

		public static TestMappingGenerationDtos.StoreDto MapToDto(this TestMappingGeneration.DataObjects.Store item)
		{
			//itemDo.AddressId
			//itemDo.PriceListId
			//itemDo.ServiceTypes
			//itemDo.CustomTenderId
			//itemDo.AggregatedTenderId

			if (item == null) return null;

			var itemDto = new TestMappingGenerationDtos.StoreDto();
			itemDto.StoreId = item.StoreId;
			itemDto.Name = item.Name;
			itemDto.ContactPerson = item.ContactPerson;
			itemDto.Email = item.Email;
			itemDto.EmailsForSendZReport = item.EmailsForSendZReport;
			itemDto.Phone = item.Phone;
			itemDto.Url = item.Url;
			itemDto.Ip = item.Ip;
			itemDto.Logo = item.Logo;
			itemDto.IsActive = item.IsActive;
			itemDto.BusinessDayStartInSeconds = item.BusinessDayStartInSeconds;
			itemDto.Description = item.Description;
			itemDto.ImageId = item.ImageId;
			itemDto.LegalEntityId = item.LegalEntityId;
			itemDto.MinAverageReceipt = item.MinAverageReceipt;
			itemDto.MaxAverageReceipt = item.MaxAverageReceipt;
			itemDto.AddressDto = item.StoreAddress.MapToDto();
			itemDto.PaymentTypes = (StorePaymentType)item.PaymentTypes;
			itemDto.TipEnabled = item.BitSettings.HasFlag(StoreSettings.TipEnabled);
			itemDto.IsDeliveryRoundTheClock = item.BitSettings.HasFlag(StoreSettings.IsDeliveryRoundTheClock);
			itemDto.MobilePromoCampaignsShow = item.BitSettings.HasFlag(StoreSettings.MobilePromoCampaignsShow);
			itemDto.MobileFutureMenuShowing = item.BitSettings.HasFlag(StoreSettings.MobileFutureMenuShowing);
			itemDto.PartySizeEnabled = item.BitSettings.HasFlag(StoreSettings.PartySizeEnabled);
			itemDto.DeliveryMoneyChangeEnabled = item.BitSettings.HasFlag(StoreSettings.DeliveryMoneyChangeEnabled);
			itemDto.SendZReportEnabled = item.BitSettings.HasFlag(StoreSettings.SendZReportEnabled);

			return itemDto;
		}

		public static TestMappingGeneration.DataObjects.Store MapFromDto(this TestMappingGenerationDtos.StoreDto itemDto)
		{
			//itemDto.PriceListId
			//itemDto.DeliveryZones
			//itemDto.IsMain

			if (itemDto == null) return null;

			var item = new TestMappingGeneration.DataObjects.Store();
			item.StoreId = itemDto.StoreId;
			item.Name = itemDto.Name;
			item.ContactPerson = itemDto.ContactPerson;
			item.Email = itemDto.Email;
			item.EmailsForSendZReport = itemDto.EmailsForSendZReport;
			item.Phone = itemDto.Phone;
			item.Url = itemDto.Url;
			item.Ip = itemDto.Ip;
			item.Logo = itemDto.Logo;
			item.IsActive = itemDto.IsActive;
			item.BusinessDayStartInSeconds = itemDto.BusinessDayStartInSeconds;
			item.Description = itemDto.Description;
			item.ImageId = itemDto.ImageId;
			item.LegalEntityId = itemDto.LegalEntityId;
			item.MinAverageReceipt = itemDto.MinAverageReceipt;
			item.MaxAverageReceipt = itemDto.MaxAverageReceipt;
			item.StoreAddress = itemDto.AddressDto.MapFromDto();
			item.PaymentTypes = (Int32)itemDto.PaymentTypes;
			item.BitSettings |= (itemDto.TipEnabled ? StoreSettings.TipEnabled : 0);
			item.BitSettings |= (itemDto.IsDeliveryRoundTheClock ? StoreSettings.IsDeliveryRoundTheClock : 0);
			item.BitSettings |= (itemDto.MobilePromoCampaignsShow ? StoreSettings.MobilePromoCampaignsShow : 0);
			item.BitSettings |= (itemDto.MobileFutureMenuShowing ? StoreSettings.MobileFutureMenuShowing : 0);
			item.BitSettings |= (itemDto.PartySizeEnabled ? StoreSettings.PartySizeEnabled : 0);
			item.BitSettings |= (itemDto.DeliveryMoneyChangeEnabled ? StoreSettings.DeliveryMoneyChangeEnabled : 0);
			item.BitSettings |= (itemDto.SendZReportEnabled ? StoreSettings.SendZReportEnabled : 0);

			return item;
		}
	}
}
